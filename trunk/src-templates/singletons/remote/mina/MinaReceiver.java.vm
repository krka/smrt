#set($filename = "${name}MinaReceiver.java")package ${myPackage};

@@IMPORTS@@

public class ${name}MinaReceiver implements #classRef($protocol)#foreach($p in $subprotocols), #classRef($p)#end {
	private final #classRef("${packageBase}.remote.${name}OutgoingMessageHandler<? extends java.io.ByteArrayOutputStream>") receiver;
	private final #classRef("org.apache.mina.core.session.IoSession") ioSession;
	private final #classRef("java.io.ByteArrayOutputStream") byteArrayOutputStream;

	public ${name}MinaReceiver(#classRef("${packageBase}.remote.${name}OutgoingMessageHandler<? extends java.io.ByteArrayOutputStream>") receiver, #classRef("org.apache.mina.core.session.IoSession") ioSession) {
		this.receiver = receiver;
		this.ioSession = ioSession;
		this.byteArrayOutputStream = receiver.getOutputStream();
	}
	
#foreach($pm in $allsubprotocols)
	@Override
	public #classRef($pm.Method.ReturnType) ${pm.Method.Name}() {
		return this;
	}
#end

#foreach($pm in $allmethods)
	@Override
	public void ${pm.Method.Name}(#parameterList($pm.Method)) {
		receiver.${pm.Chain}${pm.Method.Name}($pm.Method.ParameterListWithoutTypes);
		ioSession.write(byteArrayOutputStream.toByteArray());
		byteArrayOutputStream.reset();
	}
#end

}

